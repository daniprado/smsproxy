# SMS_CHUNK #
query.sms_chunk.insert=\
insert into sms_chunk (id_request, msisdn, originator, udh, message, last, retries) \
values (:id_request, :msisdn, :originator, :udh, :message, :last, :retries)
query.sms_chunk.select=\
select id, id_request, msisdn, originator, udh, message, last, retries \
	from sms_chunk where id = :id
query.sms_chunk.select_next=\
select * from ( \
	select rownum() rn, id, id_request, msisdn, originator, udh, message, last, retries \
		from sms_chunk c \
	  where retries < :max_retries \
	 order by c.id asc) \
where rn = 1
query.sms_chunk.update_retries=update sms_chunk set retries = retries + 1 where id = :id
query.sms_chunk.delete=delete from sms_chunk where id = :id

# SMS_REQUEST #
query.sms_request.insert=\
insert into sms_request (msisdn, originator, message, create_date) \
values (:msisdn, :originator, :message, :createDate)
query.sms_request.update_send=\
update sms_request set send_date = :sendDate, messagebird_url = :url where id = :id
query.sms_request.select=\
select id, msisdn, originator, message, create_date, send_date, messagebird_url url \
	from sms_request where id = :id
query.sms_request.select_all=\
select id, msisdn, originator, message, create_date, send_date, messagebird_url url \
	from sms_request
	
# REPORT #
query.report.select_all=\
select r.id, r.msisdn, r.originator, r.message, create_date, send_date, \
		messagebird_url url, count(s.id) chunks_left, \
		(select count(s2.id) from sms_chunk s2 \
		   where s2.id_request = r.id and s2.retries > 0) failed_chunks \
	from sms_request r \
		left join sms_chunk s on s.id_request = r.id \
 group by r.id, r.originator, r.msisdn, r.message, create_date, send_date, failed_chunks \
order by r.id asc
